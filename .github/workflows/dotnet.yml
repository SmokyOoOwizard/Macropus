# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "Develop" ]
  pull_request:
    branches: [ "Develop" ]
    
    
permissions: 
  checks: write
  contents: write
  discussions: write
  pull-requests: write
  repository-projects: read
  statuses: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install report generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
        
    - name: Cache nugets
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --logger "trx;logfilename=TestResults.trx" --results-directory ./TestsReport --no-build --collect:"XPlat Code Coverage"
      
    - name: Create coverage report
      run: reportgenerator -reports:TestsReport/**/coverage.cobertura.xml -targetdir:TestsReport -reporttypes:Cobertura
      
    - name: Create tests report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Tests Report     # Name of the check run which will be created
        path: TestsReport/*.trx    # Path to test results
        reporter: dotnet-trx     # Format of test results

    - name: Post result
      uses: bibipkins/dotnet-test-reporter@v1.0.0
      if: success() || failure()    # run this step even if previous step failed
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        results-path: ./TestsReport
        coverage-path: TestsReport/Cobertura.xml
        comment-title: 'Unit Test Results'
        post-new-comment: true
        coverage-type: cobertura
