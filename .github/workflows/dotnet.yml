# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "Develop" ]
  pull_request:
    branches: [ "Develop" ]

jobs: 
  build:
    runs-on: ubuntu-latest

    steps:        
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install report generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    
    - name: Cache nugets
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      
    - name: Cache yarn
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --logger "trx;logfilename=TestResults.trx" --results-directory ./TestsReport --no-build --collect:"XPlat Code Coverage"
      
    - name: Create coverage report
      run: reportgenerator -reports:TestsReport/**/coverage.cobertura.xml -targetdir:TestsReport -reporttypes:Cobertura
      
    - name: Create tests report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Tests Report     # Name of the check run which will be created
        path: TestsReport/*.trx    # Path to test results
        reporter: dotnet-trx     # Format of test results
        
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results
        path: |
          TestsReport/*.trx
        
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Event File
        path: ${{ github.event_path }}    